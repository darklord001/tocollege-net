<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="com.apress.progwt.client.domain">

	<class name="User" table="Users">
		<meta attribute="generated-class">com.apress.progwt.client.domain.generated.AbstractUser</meta>
		<meta attribute="scope-class">public abstract</meta>

		<id name="id" type="long" column="user_id">
			<generator class="native"></generator>
		</id>

		<property name="username" type="string" column="user_name">
			<meta attribute="use-in-equals">true</meta>
		</property>
		<property name="nickname" type="string" column="nickname">
			<meta attribute="use-in-equals">true</meta>
		</property>
		
          
		<property name="password" type="string" column="password">
		</property>
		<property name="email" type="string" column="email">
		</property>
		<property name="enabled" type="boolean" column="enabled">
		</property>
		<property name="supervisor" type="boolean" column="supervisor">
		</property>		
		
		<property name="invitations" type="int" column="invitations">
		</property>		
		
		<property name="dateCreated" type="java.util.Date">			
			<meta attribute="field-description">User Was Created</meta>
			<column name="dateCreated" sql-type="timestamp" />
		</property>


        <!-- Note: Don't Cascade! -->
        <!-- Cascade will try to save the SchoolAndAppProcess by itself, which will fail because it won't have a sort_order-->
<!-- update SchoolAndAppProcess set user_id=null, sort_order=null where user_id=? and id=? -->
        <!--   <list name="schoolRankings" inverse="false">

             <key column="user_id" />
              <list-index column="sort_order" />
             <one-to-many class="SchoolAndAppProcess" />
        </list>   -->
       
         
        <bag name="schoolRankings" inverse="false" order-by="sort_order"> 
		     <key column="user_id"  />                              
             <one-to-many class="Application" />		     
		</bag> 


        <list name="processTypes" table="user_processtype" inverse="false" cascade="save-update">
             <key column="user_id" />
             <list-index column="sort_order"/>
             <many-to-many class="ProcessType" column="process_id" />
        </list>
        <!-- <set name="processTypes" table="user_processtype" inverse="false" cascade="save-update">
             <key column="user_id" />            
             <many-to-many class="ProcessType" column="process_id" />
        </set> -->

        <list name="ratingTypes" table="user_ratingtype" inverse="false" cascade="save-update">
             <key column="user_id" />
             <list-index column="sort_order"/>
             <many-to-many class="RatingType" column="rating_id" />
        </list>

        
         <map name="priorities" table="user_priorities_map" inverse="false" cascade="all-delete-orphan">
             <key column="user_id" not-null="true"/>
             <map-key-many-to-many column="ratingtype_id" class="RatingType" />
             <element type="int" column="priority" not-null="true"/>             
        </map>

	</class>

</hibernate-mapping>